name: "CIFAR10_full"
layers {
  name: "cifar"
  type: DATA
  top: "data"
  top: "label"
  data_param {
    source: "examples/filter/filter_train_leveldb"
    #batch_size: 100
    batch_size: 32
  }
  #transform_param {
    #mean_file: "examples/filter/mean.binaryproto"
  #}
  include: { phase: TRAIN }
}
layers {
  name: "cifar"
  type: DATA
  top: "data"
  top: "label"
  data_param {
    source: "examples/filter/filter_test_leveldb"
    #batch_size: 100
    batch_size: 1
  }
  #transform_param {
    #mean_file: "examples/filter/mean.binaryproto"
  #}
  include: { phase: TEST }
}

layers {
  name: "conv1"
  type: CONVOLUTION
  bottom: "data"
  top: "conv1"
  blobs_lr: 1
  blobs_lr: 2
  convolution_param {
    num_output: 1
    #pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layers {
  name: "conv2"
  type: CONVOLUTION
  bottom: "conv1"
  top: "conv2"
  blobs_lr: 1
  blobs_lr: 2
  convolution_param {
    num_output: 16
    #pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layers {
  name: "relu2"
  type: RELU
  #type: FILTER
  bottom: "conv2"
  top: "conv2"
}
layers {
  name: "pool2"
  type: POOLING
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}

layers {
  name: "conv3"
  type: CONVOLUTION
  bottom: "pool2"
  top: "conv3"
  blobs_lr: 1
  blobs_lr: 2
  convolution_param {
    num_output: 16
    #pad: 2
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layers {
  name: "relu3"
  type: RELU
  #type: FILTER
  bottom: "conv3"
  top: "conv3"
}
layers {
  name: "pool3"
  type: POOLING
  bottom: "conv3"
  top: "pool3"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}

layers {
  name: "conv4"
  type: CONVOLUTION
  bottom: "pool3"
  top: "conv4"
  convolution_param {
    num_output: 16
    #pad: 2
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layers {
  name: "relu4"
  type: RELU
  #type: FILTER
  bottom: "conv4"
  top: "conv4"
}
layers {
  name: "pool4"
  type: POOLING
  bottom: "conv4"
  top: "pool4"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}

layers {
  name: "conv5"
  type: CONVOLUTION
  bottom: "pool4"
  top: "conv5"
  convolution_param {
    num_output: 16
    #pad: 2
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layers {
  name: "relu5"
  type: RELU
  #type: FILTER
  bottom: "conv5"
  top: "conv5"
}
layers {
  name: "pool5"
  type: POOLING
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}

layers {
  name: "conv6"
  type: CONVOLUTION
  bottom: "pool5"
  top: "conv6"
  convolution_param {
    num_output: 16
    #pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layers {
  name: "relu6"
  type: RELU
  #type: FILTER
  bottom: "conv6"
  top: "conv6"
}
layers {
  name: "pool6"
  type: POOLING
  bottom: "conv6"
  top: "pool6"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}

layers {
  name: "ip3"
  type: INNER_PRODUCT
  bottom: "pool6"
  top: "ip3"
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 250
  weight_decay: 0
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layers {
  name: "accuracy"
  type: ACCURACY
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include: { phase: TEST }
}
layers {
  name: "loss"
  type: SOFTMAX_LOSS
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
